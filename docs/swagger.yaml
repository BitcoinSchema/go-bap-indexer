basePath: /v1
definitions:
  server.Response:
    description: Standard API response wrapper
    properties:
      message:
        description: Optional error message
        example: Operation completed successfully
        type: string
      result:
        description: Response payload
      status:
        description: Status of the response ("OK" or "ERROR")
        example: OK
        type: string
    type: object
  types.Attestation:
    properties:
      attribute:
        type: string
      hash:
        type: string
      nonce:
        type: string
      signers:
        items:
          $ref: '#/definitions/types.Signer'
        type: array
      urn:
        type: string
      value:
        type: string
    type: object
  types.Signer:
    properties:
      block:
        type: integer
      idKey:
        type: string
      revoked:
        type: boolean
      sequence:
        type: integer
      signingAddress:
        type: string
      timestamp:
        type: integer
      txId:
        type: string
    type: object
host: api.sigmaidentity.com
info:
  contact:
    email: support@sigmaidentity.com
    name: Sigma Identity API Support
    url: https://github.com/BitcoinSchema/go-bap-indexer
  description: Bitcoin Attestation Protocol (BAP) indexer API for managing digital
    identities and attestations
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://api.sigmaidentity.com/terms/
  title: Sigma Identity API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Returns a hello world message
      produces:
      - application/json
      responses:
        "200":
          description: "Hello, World \U0001F44B!"
          schema:
            type: string
      summary: Get root endpoint
      tags:
      - root
  /attestation/get:
    post:
      consumes:
      - application/json
      description: Retrieves an attestation using its unique hash identifier
      parameters:
      - description: Attestation hash
        in: body
        name: hash
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with attestation data
          schema:
            allOf:
            - $ref: '#/definitions/server.Response'
            - properties:
                result:
                  $ref: '#/definitions/types.Attestation'
              type: object
        "404":
          description: Attestation not found
          schema:
            $ref: '#/definitions/server.Response'
      summary: Get attestation by hash
      tags:
      - attestation
  /person/{field}/{bapId}:
    get:
      consumes:
      - application/json
      description: Get a specific field from a person's profile
      parameters:
      - description: Field name
        in: path
        name: field
        required: true
        type: string
      - description: BAP ID
        in: path
        name: bapId
        required: true
        type: string
      produces:
      - application/json
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.Response'
      summary: Get person field
      tags:
      - person
schemes:
- https
swagger: "2.0"
