{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Bitcoin Attestation Protocol (BAP) indexer API for managing digital identities and attestations",
        "title": "Sigma Identity API",
        "termsOfService": "https://api.sigmaidentity.com/terms/",
        "contact": {
            "name": "Sigma Identity API Support",
            "url": "https://github.com/BitcoinSchema/go-bap-indexer",
            "email": "support@sigmaidentity.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "api.sigmaidentity.com",
    "basePath": "/v1",
    "paths": {
        "/": {
            "get": {
                "description": "Returns a hello world message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Get root endpoint",
                "responses": {
                    "200": {
                        "description": "Hello, World ðŸ‘‹!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attestation/get": {
            "post": {
                "description": "Retrieves an attestation using its unique hash identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attestation"
                ],
                "summary": "Get attestation by hash",
                "parameters": [
                    {
                        "description": "Attestation hash",
                        "name": "hash",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with attestation data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.Attestation"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Attestation not found",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    }
                }
            }
        },
        "/person/{field}/{bapId}": {
            "get": {
                "description": "Get a specific field from a person's profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Get person field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Field name",
                        "name": "field",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "BAP ID",
                        "name": "bapId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.Response": {
            "description": "Standard API response wrapper",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Optional error message",
                    "type": "string",
                    "example": "Operation completed successfully"
                },
                "result": {
                    "description": "Response payload"
                },
                "status": {
                    "description": "Status of the response (\"OK\" or \"ERROR\")",
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "types.Attestation": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "signers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Signer"
                    }
                },
                "urn": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "types.Signer": {
            "type": "object",
            "properties": {
                "block": {
                    "type": "integer"
                },
                "idKey": {
                    "type": "string"
                },
                "revoked": {
                    "type": "boolean"
                },
                "sequence": {
                    "type": "integer"
                },
                "signingAddress": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "txId": {
                    "type": "string"
                }
            }
        }
    }
}